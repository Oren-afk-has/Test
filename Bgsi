local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

local function isBagFull()
	local gui = player:WaitForChild("PlayerGui"):WaitForChild("MainGUI").Game.CoinBags.Container
	local egg = gui:FindFirstChild("Egg")
	local coin = gui:FindFirstChild("Coin")
	return egg and egg:FindFirstChild("Full") and egg.Full.Visible and coin and coin:FindFirstChild("Full") and coin.Full.Visible
end

local function getClosestCoin(coins)
	local closest, minDist = nil, math.huge
	for _, coin in ipairs(coins) do
		local part = coin:IsA("BasePart") and coin or coin:FindFirstChildWhichIsA("BasePart")
		if part then
			local dist = (hrp.Position - part.Position).Magnitude
			if dist < minDist then
				closest, minDist = part, dist
			end
		end
	end
	return closest
end

local function reachedTarget(targetPos)
	return (hrp.Position - targetPos).Magnitude < 4
end

local map = workspace:FindFirstChildWhichIsA("Model", true)
local coins = map and map:FindFirstChild("CoinContainer")
if not coins then return end

while true do
	if isBagFull() then
		char:BreakJoints()
		return
	end

	local closest = getClosestCoin(coins:GetChildren())
	if closest then
		local targetPos = Vector3.new(closest.Position.X, hrp.Position.Y, closest.Position.Z)
		local dist = (hrp.Position - targetPos).Magnitude
		local tween = TweenService:Create(hrp, TweenInfo.new(dist * 0.07, Enum.EasingStyle.Sine), {CFrame = CFrame.new(targetPos)})
		tween:Play()
		tween.Completed:Wait()
		
		-- Wait until the coin is collected or very close to the player
		repeat wait(0.1) until not closest.Parent or reachedTarget(closest.Position)
	end
	wait()
end
