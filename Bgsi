--Source
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

--Window
local Window = Fluent:CreateWindow({
    Title = "Fluent " .. Fluent.Version,
    SubTitle = "By Oren",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

--Tabs
local Tabs = {
    Home = Window:AddTab({ Title = "Home", Icon = "" }),
    Farming = Window:AddTab({ Title = "Farming", Icon = "" }),
    Hatching = Window:AddTab({ Title = "Hatching", Icon = "" }),
    Pets = Window:AddTab({ Title = "Pets", Icon = "" }),
    Rifts = Window:AddTab({ Title = "Rifts", Icon = "" }),
    Quests = Window:AddTab({ Title = "Quests", Icon = "" }),
    Merchant = Window:AddTab({ Title = "Merchants", Icon = "" }),
    Potions = Window:AddTab({ Title = "Potions", Icon = "" }),
    Teleport = Window:AddTab({ Title = "Teleport", Icon = "" }),
    Others = Window:AddTab({ Title = "Others", Icon = "" }),
    Settings = Window:AddTab({ Title = "Config", Icon = "" }),
}

--Credits
local Section = Tabs.Home:AddSection("Credits")
Section:AddParagraph({
    Title = "This Script Is A Work In Progess I Dunno If This Will Ever Be \nRealeased"
})

-- Farming
local Section = Tabs.Farming:AddSection("Blowing")
local Toggle = Tabs.Farming:AddToggle("Blow", 
{
    Title = "Auto Blow Bubbles", 
    Description = "Automatically Blows Bubbles For You",
    Default = false,
    Callback = function(state)
        if state then
            while state do
                local args = {
                    [1] = "BlowBubble"
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Shared"):WaitForChild("Framework"):WaitForChild("Network"):WaitForChild("Remote"):WaitForChild("Event"):FireServer(unpack(args))
                task.wait()
            end
        end
    end
})

local excluded = {
    ["gift-rift"] = true,
    ["golden-chest"] = true,
    ["royal-chest"] = true,
}

local MultiDropdown = Tabs.Rifts:AddDropdown("MultiDropdown", {
    Title = "Rifts",
    Description = "Select What Rift You Want To Hatch",
    Values = {},
    Multi = true,
    Default = {},
})

local riftNames = {}
for _, rift in ipairs(workspace.Rendered.Rifts:GetChildren()) do
    if not excluded[rift.Name] then
        table.insert(riftNames, rift.Name)
    end
end

MultiDropdown:SetValues(riftNames)

local TweenService = game:GetService("TweenService")
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

local Toggle = Tabs.Rifts:AddToggle("Rift",  
{
    Title = "AutoFarm Rifts",  
    Description = "Test", 
    Default = false,  
    Callback = function(state)
        if state then
            print("Toggle On")
            
            -- Get the selected rift(s) from the MultiDropdown
            local selectedRifts = MultiDropdown:GetValues()
            
            -- If there is at least one rift selected, tween the player to it
            if #selectedRifts > 0 then
                local riftName = selectedRifts[1] -- Assuming you want to go to the first selected rift
                local rift = workspace.Rendered.Rifts:FindFirstChild(riftName)
                
                if rift then
                    -- Create a Tween to move the player to the rift
                    local riftPosition = rift.Position
                    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out) -- Adjust speed if needed
                    local tweenGoal = {Position = riftPosition}
                    local tween = TweenService:Create(character.HumanoidRootPart, tweenInfo, tweenGoal)
                    tween:Play()
                    
                    -- Optionally, you can wait for the tween to complete before continuing
                    tween.Completed:Wait()
                else
                    print("Rift not found: " .. riftName)
                end
            end
        else
            print("Toggle Off")
        end
    end 
})


--Config Saving
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
